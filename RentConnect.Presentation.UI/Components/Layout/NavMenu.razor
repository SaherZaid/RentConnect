@using global::RentConnect.API.Enums
@using global::RentConnect.API.RentConnect.Domain.Models
@using global::RentConnect.Presentation.UI.IServices
@using Microsoft.AspNetCore.Identity

@implements IDisposable

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthProvider
@inject IBookingService BookingService
@inject IChatService ChatService
@inject UserManager<ApplicationUser> UserManager

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    .custom-nav-gap {
        gap: 1rem !important;
    }

        .custom-nav-gap .nav-link {
            padding: 0.6rem 1.2rem;
            font-size: 1rem;
            border-radius: 6px;
        }

    .nav-link {
        transition: all 0.2s ease-in-out;
        position: relative;
    }

        .nav-link:hover {
            color: #0d6efd !important;
            text-decoration: none;
        }

        .nav-link::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0%;
            height: 2px;
            background-color: #0d6efd;
            transition: width 0.3s ease;
        }

        .nav-link:hover::after,
        .nav-link.active::after {
            width: 100%;
        }

        .nav-link.active {
            color: #0d6efd !important;
            font-weight: 600;
        }

    .navbar-toggler {
        border: none;
        background: none;
    }

        .navbar-toggler i {
            font-size: 1.8rem;
            color: #0d6efd;
        }
</style>

<header class="shadow-sm border-bottom bg-white sticky-top">
    <div class="container-fluid py-2 d-flex justify-content-between align-items-center">
        <a class="navbar-brand fw-bold text-primary fs-4" href="/">
            <i class="bi bi-box-seam-fill me-2"></i>RentConnect
        </a>

        <!-- زر الهامبرغر للموبايل -->
        <button class="navbar-toggler d-lg-none" type="button" id="toggleButton">
            <i class="bi bi-list"></i>
        </button>

        <!-- القائمة الكاملة -->
        <div class="collapse navbar-collapse d-lg-flex justify-content-between align-items-center mt-2 mt-lg-0" id="mobileNavbar">
            <nav class="d-flex flex-column flex-lg-row align-items-start align-items-lg-center flex-wrap custom-nav-gap">
                <NavLink class="nav-link text-dark" href="/" Match="NavLinkMatch.All">
                    <i class="bi bi-house-door-fill me-1"></i> Home
                </NavLink>
                <NavLink class="nav-link text-dark" href="/items">
                    <i class="bi bi-grid-3x3-gap-fill me-1"></i> Items
                </NavLink>
                <NavLink class="nav-link text-dark" href="/bookings">
                    <i class="bi bi-calendar-check-fill me-1"></i> My Bookings
                    @if (myBookingCount > 0)
                    {
                        <span class="badge bg-danger">@myBookingCount</span>
                    }
                </NavLink>
                <NavLink class="nav-link text-dark" href="/additems">
                    <i class="bi bi-plus-circle-fill me-1"></i> Add Item
                </NavLink>
                <NavLink class="nav-link text-dark" href="/favorites">
                    <i class="bi bi-heart-fill text-danger me-1"></i> Favorites
                </NavLink>

                <AuthorizeView>
                    <Authorized>
                        <NavLink class="nav-link text-dark" href="/profile">
                            <i class="bi bi-person-fill me-1"></i> Profile
                        </NavLink>
                        <NavLink class="nav-link text-dark" href="/messages">
                            <i class="bi bi-chat-dots-fill me-1"></i> Messages
                            @if (unreadMessageCount > 0)
                            {
                                <span class="badge bg-danger">@unreadMessageCount</span>
                            }
                        </NavLink>
                        <NavLink class="nav-link text-dark" href="/my-bookings/owner">
                            <i class="bi bi-journal-check me-1"></i> Owner Requests
                            @if (ownerRequestsCount > 0)
                            {
                                <span class="badge bg-warning">@ownerRequestsCount</span>
                            }
                        </NavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Admin">
                    <NavLink class="nav-link text-dark" href="/Admin/Users">
                        <i class="bi bi-shield-lock-fill me-1"></i> Admin Panel
                    </NavLink>
                </AuthorizeView>
            </nav>

            <div class="d-flex align-items-center gap-2 mt-3 mt-lg-0">
                <AuthorizeView>
                    <Authorized>
                        <span class="text-dark fw-semibold d-none d-md-inline me-3"
                              style="white-space: nowrap;">
                            <i class="bi bi-person-circle me-1"></i> @fullName
                        </span>
                        <form action="Account/Logout" method="post" class="d-inline">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link text-dark border-0 bg-transparent p-0">
                                <i class="bi bi-box-arrow-right me-1"></i> Logout
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <NavLink class="btn btn-outline-primary btn-sm" href="Account/Login">
                            <i class="bi bi-box-arrow-in-right me-1"></i> Login
                        </NavLink>
                        <NavLink class="btn btn-primary btn-sm" href="Account/Register">
                            <i class="bi bi-person-plus-fill me-1"></i> Register
                        </NavLink>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </div>
</header>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleBtn = document.getElementById('toggleButton');
        const collapseDiv = document.getElementById('mobileNavbar');

        const bsCollapse = new bootstrap.Collapse(collapseDiv, {
            toggle: false
        });

        toggleBtn.addEventListener('click', function () {
            if (collapseDiv.classList.contains('show')) {
                bsCollapse.hide();
            } else {
                bsCollapse.show();
            }
        });

        // اختياري: اقفل القائمة بعد اختيار أي رابط فيها
        document.querySelectorAll('#mobileNavbar .nav-link').forEach(link => {
            link.addEventListener('click', () => {
                bsCollapse.hide();
            });
        });
    });
</script>



@code {
    private string? currentUrl;
    private int myBookingCount = 0;
    private int ownerRequestsCount = 0;
    private int unreadMessageCount = 0;
    private string? fullName;

    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userId = user?.FindFirst(c => c.Type == "sub")?.Value
                     ?? user?.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;

        if (!string.IsNullOrEmpty(userId))
        {
            var appUser = await UserManager.FindByIdAsync(userId);
            fullName = appUser?.FullName;

            var myBookings = await BookingService.GetByRenterIdAsync(userId);
            myBookingCount = myBookings.Count(b => b.Status == BookingStatus.Pending);

            var ownerRequests = await BookingService.GetPendingForOwnerAsync(userId);
            ownerRequestsCount = ownerRequests.Count();

            unreadMessageCount = await ChatService.GetUnreadConversationsCountAsync(userId);
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
